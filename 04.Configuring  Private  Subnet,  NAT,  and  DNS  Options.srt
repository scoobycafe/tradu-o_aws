1
00:00:00,599 --> 00:00:02,913
Now then, private subnet. 

2
00:00:03,013 --> 00:00:10,913
Again, we see that the network address that we've chosen is, wait for it, a subnet or a sub network 

3
00:00:11,013 --> 00:00:18,913
or a slice of the wider address range up here in the VPC network, but it is slightly different to the public subnet 

4
00:00:19,013 --> 00:00:26,913
we just created. So we're kind of saying, hey we're in the city called 10.1, we take that from our VPC definition 

5
00:00:27,013 --> 00:00:34,913
at the top, and our public subnet is on a street called 0 and our private subnet a street called 1. 

6
00:00:35,013 --> 00:00:41,913
Then any devices that we put into these subnets, so containers and EC2 instances, they get house numbers 

7
00:00:42,013 --> 00:00:47,913
in the last octet after the final period, yeah. Does that make sense? 

8
00:00:48,013 --> 00:00:53,913
It does for me at least. Anyway, for now we'll stick it in the same availability zone and we'll call it 

9
00:00:54,013 --> 00:01:01,913
priv-podcast. Easy, right? This is a breeze. Now the NAT instance here, this is basically a specialized 

10
00:01:02,013 --> 00:01:09,913
EC2 instance that's going to live in our public subnet, but it lets instances in our private subnet 

11
00:01:10,013 --> 00:01:16,913
talk to the wider world, the internet. Now real quick, okay, it works by getting itself a public IP address, 

12
00:01:17,013 --> 00:01:23,913
so not a 10. address, yeah, that means it can talk directly with the internet, and then we just create a route 

13
00:01:24,013 --> 00:01:29,913
in our private network that says, hey you know what, for any traffic whose IP address we don't know where 

14
00:01:30,013 --> 00:01:35,913
to send it to, send it over to the NAT instance. The NAT instance then does some networking magic, there I go 

15
00:01:36,013 --> 00:01:43,913
with magic again, but anyway, it does some networking magic so that that traffic gets sent over to the internet. 

16
00:01:44,013 --> 00:01:49,913
Any replies, well they get routed back to the appropriate host on the private subnet. 

17
00:01:50,013 --> 00:01:54,913
Simple, though like in everything, right, there's a bunch more to it than that and we're going to cover it 

18
00:01:55,013 --> 00:02:01,913
all in due time. I just thought, right, you might like to know the basics of how it works for the time being. 

19
00:02:02,013 --> 00:02:07,913
Okay, we need to choose an instance type here for our NAT. Now I'm not going to be pushing this hard 

20
00:02:08,013 --> 00:02:11,913
in the lab at all, plus I'm a cheapskate, so I'll go with m1 small. 

21
00:02:12,013 --> 00:02:15,913
You go with whatever you think you're going to need for your requirements, but if you're just following along 

22
00:02:16,013 --> 00:02:23,913
or playing in the lab, you're probably going to be fine with just an m1 small and charges to apply here, okay. 

23
00:02:24,013 --> 00:02:28,913
Oh, for a keeper here, well I'm going to go with podcast-keys that I created earlier. 

24
00:02:29,013 --> 00:02:35,913
But you know what? I could choose any of my available keys, right, as long as I'm in possession of them. 

25
00:02:36,013 --> 00:02:40,913
But I just like to keep things neat and tidy, so I'm going to go with the pair that I created with a 

26
00:02:41,013 --> 00:02:48,913
meaningful name, now I'm not bothered about S3 endpoints for now, but yeah I do want to enable DNS host names. 

27
00:02:49,013 --> 00:02:54,913
What this is going to do is just make sure that any instances that we spin up in this VPC, okay, are going to get 

28
00:02:55,013 --> 00:03:01,913
DNS names that are resolvable internally within AWS and externally on the public internet, the latter of course 

29
00:03:02,013 --> 00:03:07,913
only being if we're putting them in a public subnet and giving them public IPs, but the idea is, right, 

30
00:03:08,013 --> 00:03:13,913
if we want name resolution rather than just working with IP addresses, we want to say yes to this. 

31
00:03:14,013 --> 00:03:20,913
And last but not least here, this hardware tenancy option, this lets up change from the default of where 

32
00:03:21,013 --> 00:03:26,913
we share actual server hardware and the likes with other folks, to the other option, dedicated where we 

33
00:03:27,013 --> 00:03:31,913
pay for dedicated physical servers that we don't share with anyone else. 

34
00:03:32,013 --> 00:03:34,9
But that's going to cost a ton more than the default shared tenancy. 

35
00:03:35,000 --> 00:03:38,000
Anyway, it all looks good to me, let's create it. And off it goes. 


